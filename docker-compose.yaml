# this compose file setup contains a single kafka instance that relies on kraft for coordination. No zookeeper needed

# project name
name: kron
services:
    # producer:
    #     build:
    #         context: .
    #         dockerfile: ./docker/Dockerfile.producer
    #     container_name: kron-producer
    #     depends_on:
    #         - kafka
    #     volumes:
    #         - ./tabs:/app/tabs
    #     networks:
    #         - kron

    kafka:
        image: bitnami/kafka
        container_name: kron-kafka
        environment:
            # unique node id
            - KAFKA_CFG_NODE_ID=0
            # node functioning as controller (metadata store) and broker
            - KAFKA_CFG_PROCESS_ROLES=controller,broker
            # listener endpoints for client (9092), raft traffic (9093)
            - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
            # no encryption policy set. use plaintext
            - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
            # vote definitions. node id = 0, kraft port = 9093
            - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
            # use "CONTROLLER" listener name for quorum activities
            - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
            - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
        ports:
            - 9092:9092
        networks:
            - kron

networks:
    kron:
        driver: bridge
